{"ast":null,"code":"var _jsxFileName = \"D:\\\\BHARGAVA\\\\Projects\\\\ttgen\\\\frontend\\\\src\\\\components\\\\AddRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRoom = () => {\n  _s();\n  const [room, setRoom] = useState({\n    roomId: '',\n    seatingCapacity: 60 // Default seating capacity\n  });\n  const [showSuccess, setShowSuccess] = useState(false);\n  const handleChange = e => {\n    setRoom({\n      ...room,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Post the room data to the server\n      await axios.post('http://localhost:5000/api/rooms', {\n        roomId: room.roomId,\n        // Since the seating capacity is fixed at 60, we don't need to send it from the state\n        // but I'm including it here in case the backend requires it.\n        seatingCapacity: room.seatingCapacity\n      });\n      // Reset the form to default\n      setRoom({\n        roomId: '',\n        seatingCapacity: 60\n      });\n      // Show success message\n      setShowSuccess(true);\n      setTimeout(() => setShowSuccess(false), 5000);\n    } catch (error) {\n      console.error('Error adding room', error);\n      setShowSuccess(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-xs\",\n        children: [showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"alert\",\n          className: \"alert alert-success mb-5\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Room added successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"bg-gray-800 shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"roomId\",\n              className: \"block text-gray-300 text-sm font-bold mb-2\",\n              children: \"Room ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"roomId\",\n              value: room.roomId,\n              onChange: handleChange,\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            children: \"Add Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AddRoom, \"36N9lZU5u3eAYLk/DLjPjHQxnkg=\");\n_c = AddRoom;\nexport default AddRoom;\nvar _c;\n$RefreshReg$(_c, \"AddRoom\");","map":{"version":3,"names":["React","useState","axios","Navbar","jsxDEV","_jsxDEV","AddRoom","_s","room","setRoom","roomId","seatingCapacity","showSuccess","setShowSuccess","handleChange","e","target","name","value","handleSubmit","preventDefault","post","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","role","onSubmit","htmlFor","type","onChange","_c","$RefreshReg$"],"sources":["D:/BHARGAVA/Projects/ttgen/frontend/src/components/AddRoom.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from './Navbar';\r\n\r\nconst AddRoom = () => {\r\n  const [room, setRoom] = useState({\r\n    roomId: '',\r\n    seatingCapacity: 60, // Default seating capacity\r\n  });\r\n\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setRoom({ ...room, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Post the room data to the server\r\n      await axios.post('http://localhost:5000/api/rooms', {\r\n        roomId: room.roomId,\r\n        // Since the seating capacity is fixed at 60, we don't need to send it from the state\r\n        // but I'm including it here in case the backend requires it.\r\n        seatingCapacity: room.seatingCapacity\r\n      });\r\n      // Reset the form to default\r\n      setRoom({ roomId: '', seatingCapacity: 60 });\r\n      // Show success message\r\n      setShowSuccess(true);\r\n      setTimeout(() => setShowSuccess(false), 5000);\r\n    } catch (error) {\r\n      console.error('Error adding room', error);\r\n      setShowSuccess(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-white\">\r\n        <div className=\"w-full max-w-xs\">\r\n          {showSuccess && (\r\n            <div role=\"alert\" className=\"alert alert-success mb-5\">\r\n              <span>Room added successfully!</span>\r\n            </div>\r\n          )}\r\n          <form onSubmit={handleSubmit} className=\"bg-gray-800 shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"roomId\" className=\"block text-gray-300 text-sm font-bold mb-2\">Room ID:</label>\r\n              <input type=\"text\" name=\"roomId\" value={room.roomId} onChange={handleChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\" />\r\n            </div>\r\n            {/* Seating capacity is fixed at 60 and not changed by the user, so no input for it */}\r\n            <button type=\"submit\" className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">\r\n              Add Room\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}